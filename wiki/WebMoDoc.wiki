= 1 项目简介 =
----
== 1.1 缘起 == 
本项目源于研一选修的[http://cs.sysu.edu.cn/~lcw/ XML课程]的大作业。本来是想运用所学的Dom编程知识做一个股票网页关键内容抽取的应用，于是我用python+Dom很快实现了想要的功能。在实现的过程中发现，其实类似的应用很多人都在做，譬如抽取网上的天气信息、抽取网上的优惠票价信息、抽取最新的网络视频连接等等。

然而，网络的信息是海量的，每个人感兴趣的内容也不尽相同。虽然一名伟大的程序员可以根据自己的需要去写程序抓取网上的内容，但普通的用户要获取自己想要的信息，只能靠运气找别人实现的程序。譬如，我实现了一个股票信息抽取器，可以查看个股的当前股价，假如某个用户不满足这些，还想查看个股的各种更详细的指数，他是没办法修改程序达到目的的——这种程序从编译那一刻就决定了用户能获取哪些内容。这种硬编码的方式显然满足不了多样的用户需求。
----
== 1.2 思考 == 
观察发现，各种网页内容抽取的程序虽然实现方法不一（有的用html+javascript，有的用C#+.NET XML，有的用VC+MSXML，有的用java+JAXP），但本质上都是 *定时解析某个网页并提取其中的某些包含动态内容的Element* 。

既然这类应用都有这种共性，何不深入做下去，实现一个更为 *通用的* 程序呢？我希望我的程序不只一个股票查看器，而是能实时获取天气、票价、新闻、博客、通知、成绩等任何网络内容的通用程序。我希望我的程序不只是按我的意愿去抽取哪部分的内容，而是可以让用户去决定——用户想抽取什么，他就能获得什么样的抽取器。

另一方面，为了照顾更多的用户，使得程序的使用门槛尽可能低，我还希望我的程序允许用户方便简单地定义他们想要的内容——总不能让一个普通的用户自己去修改程序的xml配置文档。因此，有必要在这个“通用的”程序上加入直观简单的交互操作，让用户点几下鼠标，就能得到一个为自己量身订做的网络信息抽取器。
----
== 1.3 目标 == 
总结上述思考，我想实现的是一个能 *通过简单操作为用户提供量身定制的网页内容抽取器* 的程序。该程序不再是一个简单的抽取器，而是一个能 *生成抽取器* 的程序。具体来说，这个程序应具备以下的新特性：
 # *通用性*——只要是网页上的内容，无论内容是什么类型，无论是静态的还是动态的，都能提取
 # *可配置性*——用户可以自定义需要提取的信息，而不是传统的硬编码方式
 # *交互简单*——用户不需要具备编程技能，只需要直观的鼠标操作，即可达到目的
 # *适合广泛的用户*——程序可在各种操作系统平台下运行     
----
= 2 设计思想 =
----
== 2.1 流程设计 ==
程序执行时，首先由用户前往某个网页，并对该网页做交互操作从而选取目标内容，然后由程序解析这些内容，最终生成一个满足用户需要的网页内容实时抽取器。下图示出本程序的主要流程：

https://webmo.googlecode.com/svn/wiki/5.jpg

=== 2.1.1 为什么要生成html === 
本项目







----
== 2.1 交互方式 ==
=== 2.1.1 基本的网页浏览 === 
为了最大限度地增强用户体验，让用户更方便地自定义自己感兴趣的内容，本项目将提供一个类似浏览器的界面： 

https://webmo.googlecode.com/svn/wiki/1.jpg

用户可自行输入网址，浏览目标网页。程序提供网页浏览的基本功能——后退、前进、刷新和停止加载。

=== 2.1.2 网页元素选取 ===
基于网页浏览的方式，用户可直观地在网页上对感兴趣的区域右击鼠标进行选取。

https://webmo.googlecode.com/svn/wiki/3.jpg

如上图所示，当用户右击鼠标后，页面上相应的区域就会斜纹高亮显示。如果需要对当前的区域进行调整，还可按 *F6* 扩大选取的区域：

https://webmo.googlecode.com/svn/wiki/4.jpg

或按 *F7* 缩小选取的区域：

https://webmo.googlecode.com/svn/wiki/2.jpg

----
=== 2.2 网页元素选取 ===

----




= 3 实现细节 =
----
== 3.1 开发环境 ==
== 3.2 实现技术 ==
{{{
int i;
}}}

----




= 4 应用 =
----
== 4.1 使用环境说明 ==
== 4.2 应用例子1 ==